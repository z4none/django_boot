# Generated by Django 2.2.4 on 2020-04-27 23:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '控制台',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='名称')),
                ('value', models.TextField(blank=True, max_length=200, verbose_name='值')),
                ('description', models.TextField(blank=True, verbose_name='描述')),
            ],
            options={
                'verbose_name': '配置',
                'verbose_name_plural': '配置',
                'permissions': [('can_set_config', '可以编辑配置的值')],
            },
        ),
        migrations.CreateModel(
            name='Foo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Foo',
                'verbose_name_plural': 'Foos',
            },
        ),
        migrations.CreateModel(
            name='SidebarItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='名称')),
                ('url', models.CharField(blank=True, max_length=100, null=True, verbose_name='网址')),
                ('pattern', models.CharField(blank=True, help_text='匹配当前 url 决定是否高亮', max_length=50, null=True, verbose_name='高亮模式')),
                ('order', models.IntegerField(default=0, verbose_name='顺序')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='图标')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='dbt.SidebarItem', verbose_name='上级菜单')),
            ],
            options={
                'verbose_name': '侧栏菜单',
                'verbose_name_plural': '侧栏菜单',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='手机号码')),
                ('avatar', models.ImageField(blank=True, upload_to='avatar/%Y%m%d/', verbose_name='头像')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='个人资料')),
                ('need_modify_password', models.BooleanField(default=False, verbose_name='需要修改密码')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='名称')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dbt.Org', verbose_name='上级组织')),
                ('users', models.ManyToManyField(blank=True, related_name='orgs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '组织',
                'verbose_name_plural': '组织',
            },
        ),
        migrations.CreateModel(
            name='Dict',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('value', models.CharField(blank=True, max_length=100, verbose_name='值')),
                ('order', models.IntegerField(default=0, verbose_name='顺序')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='dbt.Dict', verbose_name='字典')),
            ],
            options={
                'verbose_name': '字典',
                'verbose_name_plural': '字典',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='config',
            index=models.Index(fields=['name'], name='dbt_config_name_acf47e_idx'),
        ),
        migrations.AddIndex(
            model_name='dict',
            index=models.Index(fields=['name'], name='dbt_dict_name_2e1b2a_idx'),
        ),
    ]
